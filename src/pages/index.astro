---
// src/pages/index.astro
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>maximos 'halbert' pantelidakis</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      
      body {
        font-family: 'PF Videotext Regular', 'SF Mono', 'Monaco', 'Inconsolata', 'Fira Code', monospace;
        background: #0a0a0a;
        color: #fff;
        line-height: 1.6;
      }
      
      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 20px;
      }
      
      /* Hero Section with Showreel */
      .hero-section {
        position: relative;
        height: 100vh;
        overflow: hidden;
      }
      
      .showreel-video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        z-index: 1;
        cursor: pointer;
      }
      
      .hero-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.3);
        z-index: 2;
        pointer-events: none;
      }
      
      /* Navigation */
      nav {
        position: fixed;
        top: 30px;
        right: 30px;
        z-index: 100;
      }
      
      nav ul {
        display: flex;
        list-style: none;
        gap: 30px;
      }
      
      nav a {
        color: #ccc;
        text-decoration: none;
        font-size: 16px;
        transition: color 0.3s;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
      }
      
      nav a:hover {
        color: #fff;
      }
      
      /* Header with name */
      .hero-header {
        position: absolute;
        top: 30px;
        left: 30px;
        z-index: 10;
      }
      
      .logo {
        font-size: 14pt;
        font-weight: 400;
        text-decoration: none;
        color: #fff;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
      }
      
      .subtitle {
        font-size: 10pt;
        color: #ccc;
        margin-top: 5px;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
      }
      
      /* Description below video */
      .hero-description {
        position: absolute;
        bottom: 80px;
        left: 30px;
        right: 30px;
        z-index: 10;
        text-align: center;
      }
      
      .hero-description p {
        font-size: 16px;
        color: #ddd;
        max-width: 600px;
        margin: 0 auto;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
      }
      
      /* Scroll indicator */
      .scroll-indicator {
        position: absolute;
        bottom: 30px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 10;
        cursor: pointer;
        background: rgba(0, 0, 0, 0.2);
        padding: 15px;
        border-radius: 50%;
        transition: background 0.3s ease;
      }
      
      .scroll-indicator:hover {
        background: rgba(0, 0, 0, 0.4);
      }
      
      .scroll-arrow {
        width: 0;
        height: 0;
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        border-top: 12px solid rgba(255, 255, 255, 0.6);
        animation: bounce 2s infinite;
      }
      
      @keyframes bounce {
        0%, 20%, 50%, 80%, 100% {
          transform: translateY(0);
        }
        40% {
          transform: translateY(-5px);
        }
        60% {
          transform: translateY(-3px);
        }
      }
      
      /* Work section - CHANGES: grid forced to full-width 2x2, video thumbnails enabled */
      .work-section {
        background: #0a0a0a;
        min-height: 100vh;
        padding-top: 80px;
      }
      
      /* full-bleed grid: removes container constraint and spans viewport */
      .work-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(2, 1fr);
        gap: 0;
        margin: 0 0 80px 0;
        width: 100vw; /* full viewport width */
        max-width: 100vw;
      }

      .work-item {
        position: relative;
        overflow: hidden;
        display: block;
        background: #111;
        text-decoration: none;
        color: inherit;
        height: 100%; /* fill grid cell */
      }

      /* support both static images and looping video thumbnails */
      .work-item img,
      .work-item video {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease, filter 0.3s ease;
        display: block;
      }

      .work-item:hover img,
      .work-item:hover video {
        filter: brightness(0.4);
        transform: scale(1.02);
      }

      .work-item-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
        color: #fff;
        opacity: 0;
        transition: opacity 0.3s ease;
        padding: 20px;
        max-width: 90%;
      }

      .work-item:hover .work-item-content {
        opacity: 1;
      }

      .work-item h3 {
        font-size: 18px;
        margin-bottom: 10px;
      }
      
      .work-item p {
        color: #ccc;
        font-size: 14px;
      }
      
      .category-tag {
        display: inline-block;
        background: rgba(0, 0, 0, 0.8);
        color: #fff;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        margin-bottom: 10px;
        backdrop-filter: blur(10px);
      }

      /* remove play-overlay usage for category tiles */
      .play-overlay { display: none; }

      footer {
        border-top: 1px solid #333;
        padding: 40px 0;
        text-align: center;
        color: #666;
        background: #0a0a0a;
      }
      
      /* Mute indicator */
      .mute-indicator {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        z-index: 200;
        opacity: 0;
        transition: opacity 0.3s ease;
        pointer-events: none;
      }
      
      .mute-indicator.show {
        opacity: 1;
      }
      
      @media (max-width: 768px) {
        nav {
          position: fixed;
          top: 20px;
          right: 20px;
        }
        
        nav ul {
          gap: 20px;
        }
        
        .hero-header {
          top: 20px;
          left: 20px;
        }
        
        .hero-description {
          bottom: 60px;
          left: 20px;
          right: 20px;
        }
        
        .hero-description p {
          font-size: 14px;
        }
        
        /* stack grid on narrow screens */
        .work-grid {
          grid-template-columns: 1fr;
          grid-template-rows: none;
          width: 100%;
        }

        .work-item {
          aspect-ratio: 16/9;
        }
        
        .work-section {
          padding-top: 40px;
        }
      }
      
      /* Lightbox Modal */
      .lightbox-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.9);
        z-index: 1000;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease, visibility 0.3s ease;
      }
      
      .lightbox-overlay.active {
        opacity: 1;
        visibility: visible;
      }
      
      .lightbox-content {
        position: relative;
        width: 90%;
        max-width: 1000px;
        aspect-ratio: 16/9;
        background: #000;
        border-radius: 8px;
        overflow: hidden;
        transform: scale(0.8);
        transition: transform 0.3s ease;
      }
      
      .lightbox-overlay.active .lightbox-content {
        transform: scale(1);
      }
      
      .lightbox-iframe {
        width: 100%;
        height: 100%;
        border: none;
      }
      
      .lightbox-close {
        position: absolute;
        top: -50px;
        right: 0;
        color: white;
        font-size: 30px;
        cursor: pointer;
        z-index: 10;
        background: none;
        border: none;
        padding: 10px;
        line-height: 1;
      }
      
      .lightbox-close:hover {
        opacity: 0.7;
      }
      
      /* Smooth scroll behavior */
      html {
        scroll-behavior: smooth;
      }
    </style>
  </head>
  <body>
    <!-- Hero Section with Showreel -->
    <section class="hero-section" id="hero">
      <video 
        class="showreel-video" 
        autoplay 
        muted 
        loop 
        playsinline
        poster="/thumbnails/showreel-poster.jpg"
        id="showreelVideo"
      >
        <source src="/videos/showreel.mp4" type="video/mp4">
        <img src="/thumbnails/showreel-poster.jpg" alt="Showreel" style="width: 100%; height: 100%; object-fit: cover;">
      </video>
      
      <div class="hero-overlay"></div>
      
      <nav>
        <ul>
          <li><a href="#work">Work</a></li>
          <li><a href="/about">About</a></li>
          <li><a href="/contact">Contact</a></li>
        </ul>
      </nav>

      <div class="hero-header">
        <a href="/" class="logo">maximos 'halbert' pantelidakis</a>
        <div class="subtitle">Multimedia Videographer</div>
      </div>
      
      <div class="hero-description">
        <p>Leftfield videos and collages fueled by insatiable curiosity.</p>
        <p> <i>[M] to unmute, click to pause</i></p>
      </div>
      
      <div class="scroll-indicator" id="scrollIndicator">
        <div class="scroll-arrow"></div>
      </div>
    </section>

    <!-- Work Section -->
    <section class="work-section" id="work">
      <!-- removed container wrapper so grid can be full-bleed -->
      <div class="work-grid">
      <!-- Category: Music Videos -->
      <a href="/work/music-videos" class="work-item">
        <video src="/thumbnails/music-video-thumb.mp4" muted loop playsinline preload="auto"></video>
        <div class="work-item-content">
        <h3>Music Videos</h3>
        <p>Multimedia, music videos, fused with dada, collage and video effects.</p>
        </div>
      </a>

      <!-- Category: Video Essays -->
      <a href="/work/video-essays" class="work-item">
        <video src="/thumbnails/video-essay-thumb.mp4" muted loop playsinline preload="auto"></video>
        <div class="work-item-content">
        <!-- <span class="category-tag">Video Essay</span> -->
        <h3>Video Essays</h3>
        <p>Big ideas through the lens of pop culture.</p>
        </div>
      </a>

      <!-- Category: experimental -->
      <a href="/work/experimental" class="work-item">
        <video src="/thumbnails/experimental-thumb.mp4" muted loop playsinline preload="auto"></video>
        <div class="work-item-content">
        <h3>Experimental [UNDER CONSTRUCTION]</h3>
        <p>Animated and non-animated collages, paper cut-outs and experiments.</p>
        </div>
      </a>

      <!-- Category: Photography -->
      <a href="/work/photography" class="work-item">
        <video src="/thumbnails/photos-thumb.mp4" muted loop playsinline preload="auto"></video>
        <div class="work-item-content">
        <!-- <span class="category-tag">Photography</span> -->
        <h3>Photography [UNDER CONSTRUCTION]</h3>
        <p>Urbex and street photography</p>
        </div>
      </a>
      </div>
    </section>

    <footer>
      <div class="container">
        <p>&copy; 2025 Maximos Pantelidakis. All rights reserved.</p>
      </div>
    </footer>

    <!-- Mute Indicator -->
    <div class="mute-indicator" id="muteIndicator">Muted</div>

    <!-- Lightbox Modal -->
    <div class="lightbox-overlay" id="lightbox">
      <div class="lightbox-content">
        <button class="lightbox-close" id="lightboxClose">&times;</button>
        <iframe class="lightbox-iframe" id="lightboxIframe" src="" allowfullscreen></iframe>
      </div>
    </div>

    <script>
      // Select all .work-item elements
      document.querySelectorAll('.work-item').forEach(workItem => {
        const videoElement = workItem.querySelector('video') as HTMLVideoElement | null;
    
        if (videoElement) {
          // Play video when hovering over the entire work-item
          workItem.addEventListener('mouseover', () => {
            videoElement.play();
          });
    
          // Pause and reset video when leaving the entire work-item
          workItem.addEventListener('mouseout', () => {
            videoElement.pause();
            videoElement.currentTime = 0; // Reset to the start
          });
        }
      });
    </script>

    <script>
      // Get references to elements
      const video = document.querySelector('video') as HTMLVideoElement | null;
      const scrollIndicator = document.querySelector('.scroll-indicator') as HTMLElement | null;
      const muteIndicator = document.querySelector('.mute-indicator') as HTMLElement | null;
      const lightbox = document.querySelector('.lightbox') as HTMLElement | null;
      const lightboxClose = document.querySelector('.lightbox-close') as HTMLElement | null;
      const lightboxIframe = document.querySelector('.lightbox iframe') as HTMLIFrameElement | null;

      // Ensure video is not null before adding event listeners
      if (video) {
        // Click video to pause/play
        video.addEventListener('click', () => {
          if (video.paused) {
            video.play();
          } else {
            video.pause();
          }
        });

        // M key to mute/unmute
        document.addEventListener('keydown', (e) => {
          if (e.key.toLowerCase() === 'm') {
            e.preventDefault();
            if (video.muted) {
              video.muted = false;
              showMuteIndicator('Unmuted');
            } else {
              video.muted = true;
              showMuteIndicator('Muted');
            }
          }

          // Escape key to close lightbox
          if (e.key === 'Escape') {
            closeLightbox();
          }
        });
      }

      // Ensure scrollIndicator is not null before adding event listener
      if (scrollIndicator) {
        // Scroll to work section when clicking indicator
        scrollIndicator.addEventListener('click', () => {
          const workSection = document.getElementById('work');
          if (workSection) {
            workSection.scrollIntoView({ behavior: 'smooth' });
          }
        });
      }

      // Show mute indicator
      function showMuteIndicator(text: string) {
        if (muteIndicator) {
          muteIndicator.textContent = text;
          muteIndicator.classList.add('show');
          setTimeout(() => {
            muteIndicator.classList.remove('show');
          }, 1000);
        }
      }
      
      // Lightbox functionality: only trigger for items that have data attributes (legacy single-video items)
      document.querySelectorAll('.work-item').forEach((item) => {
        item.addEventListener('click', (e) => {
          const target = item as HTMLElement; // Assert that item is an HTMLElement

          // if this tile is a category page (no data-video-type), allow normal navigation
          const videoType = target.dataset.videoType;
          if (!videoType) return; // no prevention, follow the link

          e.preventDefault();
          const videoId = target.dataset.videoId;
          const title = target.dataset.title;

          // Ensure lightbox and lightboxIframe are not null
          const lightbox = document.getElementById('lightbox') as HTMLElement | null;
          const lightboxIframe = document.getElementById('lightboxIframe') as HTMLIFrameElement | null;

          if (!lightbox || !lightboxIframe) {
            console.error('Lightbox or LightboxIframe not found in the DOM.');
            return;
          }

          let embedUrl = '';
          if (videoType === 'youtube') {
            embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=1`;
          } else if (videoType === 'vimeo') {
            embedUrl = `https://player.vimeo.com/video/${videoId}?autoplay=1`;
          }

          lightboxIframe.src = embedUrl; // Set the iframe's src
          lightbox.classList.add('active');
          document.body.style.overflow = 'hidden'; // Prevent scrolling
        });
      });
      
      // Close lightbox
      function closeLightbox() {
        if (lightbox && lightboxIframe) {
          lightbox.classList.remove('active');
          lightboxIframe.src = ''; // Stop video
          document.body.style.overflow = 'auto'; // Re-enable scrolling
        }
      }

      // Ensure lightboxClose is not null before adding event listener
      if (lightboxClose) {
        lightboxClose.addEventListener('click', closeLightbox);
      }

      // Ensure lightbox is not null before adding event listener
      if (lightbox) {
        // Close lightbox when clicking outside
        lightbox.addEventListener('click', (e) => {
          if (e.target === lightbox) {
            closeLightbox();
          }
        });
      }

      // Update Work navigation link to scroll to work section
      const workNavLink = document.querySelector('nav a[href="#work"]') as HTMLElement | null;
      if (workNavLink) {
        workNavLink.addEventListener('click', (e) => {
          e.preventDefault();
          const workSection = document.getElementById('work');
          if (workSection) {
            workSection.scrollIntoView({ behavior: 'smooth' });
          }
        });
      }
    </script>
  </body>
</html>
